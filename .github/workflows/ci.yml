on: [push, pull_request]

permissions:
  contents: read
  packages: write

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Vet Code
        run: go vet ./...
      - name: Check Formatting
        run: gofmt -l .
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Fetch Dependencies
        run: go get .
      - name: Run Tests
        run: go test ./...
  build:
    name: Build Binary
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Fetch Dependencies
        run: go mod download
      - name: Build govanity
        run: |
          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            go build -o build/ -ldflags "-w -s -X main.Version=$GITHUB_REF_NAME" -v .
          else
            go build -o build/ -v .
          fi
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: govanity
          path: build/govanity
  build-image:
    name: Build Image
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args: |
            VERSION=${{ github.ref_type == 'tag' && github.ref_name || '' }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
